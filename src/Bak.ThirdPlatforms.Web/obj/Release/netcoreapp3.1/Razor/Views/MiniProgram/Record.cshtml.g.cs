#pragma checksum "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\MiniProgram\Record.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "92a79e2cf1599fcc76952bcafa65c730799af62f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MiniProgram_Record), @"mvc.1.0.view", @"/Views/MiniProgram/Record.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\_ViewImports.cshtml"
using Bak.ThirdPlatforms.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\_ViewImports.cshtml"
using Bak.ThirdPlatforms.Web.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\MiniProgram\Record.cshtml"
using Volo.Abp.Application.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\MiniProgram\Record.cshtml"
using Bak.ThirdPlatforms.Application.Contracts.MiniPrograms;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"92a79e2cf1599fcc76952bcafa65c730799af62f", @"/Views/MiniProgram/Record.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4cc7dbc6717b380374bcddf00dec8f236a14124e", @"/Views/_ViewImports.cshtml")]
    public class Views_MiniProgram_Record : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PagedResultDto<MiniProgramRecordDto>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\Projects\Bak.ThirdPlatforms\src\Bak.ThirdPlatforms.Web\Views\MiniProgram\Record.cshtml"
  
    ViewData["Title"] = "创建记录 - 小程序";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 50px;\">\r\n    <legend>创建记录</legend>\r\n</fieldset>\r\n<table id=\"table\" lay-filter=\"test\"></table>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        layui.use('table',
            function () {
                var table = layui.table;

                //第一个实例
                table.render({
                    elem: '#table',
                    height: 500,
                    url: 'record', //数据接口
                    method: 'post',
                    parseData: function (res) { //res 即为原始返回的数据
                        return {
                            ""code"": res.code, //解析接口状态
                            ""msg"": res.message, //解析提示文本
                            ""count"": res.result.totalCount, //解析数据长度
                            ""data"": res.result.items //解析数据列表
                        };
                    },
                    page: true //开启分页
                    ,
                    cols: [
                        [//表头
                            { field: 'id', title: 'Id', width: 50, hide: true },
                            { field: 'name', title: '企业名', sort: true },
                         ");
                WriteLiteral(@"   { field: 'code', title: '企业代码', sort: true },
                            { field: 'code_type', title: '企业代码类型', sort: true },
                            { field: 'legal_persona_wechat', title: '法人微信号', sort: true },
                            { field: 'legal_persona_name', title: '法人姓名', sort: true },
                            { field: 'component_phone', title: '第三方联系电话', sort: true },
                            { field: 'errcode', title: '状态码', sort: true },
                            { field: 'errmsg', title: '信息', sort: true },
                            { field: 'creationTime', title: '创建时间', sort: true },
                            { field: 'lastModificationTime', title: '更新时间', sort: true },
                            { fixed: 'right', width: 150, align: 'center', toolbar: '#barDemo' } //这里的toolbar值是模板元素的选择器
                        ]
                    ]
                });

                table.on('tool(test)',
                    function (obj) { //注：tool 是工具条事件名，test 是 t");
                WriteLiteral(@"able 原始容器的属性 lay-filter=""对应的值""
                        var data = obj.data; //获得当前行数据
                        var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                        var tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）

                        if (layEvent === 'search') { //查看
                            $.ajax({
                                url: 'search',
                                type: 'post',
                                data: { 'name': data['name'], 'legal_persona_wechat': data['legal_persona_wechat'], 'legal_persona_name': data['legal_persona_name'] },
                                dataType: 'json',
                                //contentType: 'application/json;charset=UTF-8',
                                success: function (res) {
                                    layer.msg(res.result,
                                        {
                                            icon: 2,
                                            time: false,
     ");
                WriteLiteral(@"                                       btn: ['关闭']
                                        });
                                },
                                error: function () {
                                    layer.alert('服务器异常');
                                }
                            });
                        }
                    });
            });


    </script>

    <script type=""text/html"" id=""barDemo"">
        <a class=""layui-btn layui-btn-xs"" lay-event=""search"">更新状态</a>
    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PagedResultDto<MiniProgramRecordDto>> Html { get; private set; }
    }
}
#pragma warning restore 1591
